#ifndef mem_h
#define mem_h

#define NUMBER_OF_MEM 15 // stm leave in last mem

uint8_t MEM[NUMBER_OF_MEM][LULU_PATCHSIZE] = {
    {  255, 255, 255, 255, 255,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 00 White
    {  255, 255, 255, 255, 255,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 01 respi white **0** 38 > 217
    {  255, 255, 255, 255, 255,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 02 respi white speed **0** 38 > 217
    {  255, 255, 255, 255, 255,       0,         0,      127,       45,        255,       0,       0,       0,       0,           0,  255,     0,    0}, // 03 str rnd lent
    {  255, 255, 255, 255, 255,       0,         0,      127,       45,        171,       0,       0,       0,       0,           0,  255,     0,    0}, // 04 str rnd 67
    {  255, 255, 255, 255, 255,       0,         0,      127,       15,        171,       0,       0,       0,       0,           0,  255,     0,    0}, // 05 str all 67
    {  255, 255, 255, 255, 255,       0,         0,      127,       15,        107,       0,       0,       0,       0,           0,  255,     0,    0}, // 06 str all 42
    {  255, 255, 255, 255, 255,       0,         0,      127,       15,        255,       0,       0,       0,       0,           0,  255,     0,    0}, // 07 str all lent
    {  255, 255, 255, 255, 255,       0,         0,      127,      215,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 08 circule w **9** 229>238
    {  255, 255, 255, 255, 255,      25,         9,        0,        0,          0,       0,       0,     255,       0,           0,  255,     0,    0}, // 09 circus w b **7** 1>255
    {  255, 255, 255, 255, 255,       0,         0,      127,       15,        127,       0,       0,       0,       0,           0,  255,     0,    0}, // 10 str w -> blue
    {  255,   0,   0, 255,   0,       0,         0,      127,        0,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 11 blue all
    {  255,   0,   0, 255,   0,       0,        55,      170,       56,          0,       0,       0,       0,       0,          35,  255,     0,    0}, // 12 blue parcielle
    {  255,   0,   0, 255,   0,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255,     0,    0}, // 13 respi blue **0**38 > 217 
    {    0,   0,   0,   0,   0,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,    0,     0,    0}, // 14 BLACK stm leave lset mem
};
//{master , r  , g  , b  , w  ,pix mod , pix long , pix_pos , str_mod , str_speed , r_fond , g_fond , b_fond , w_fond , mirror_mod , zoom , pw1 , pw2 }
//{0      , 1  , 2  , 3  , 4  ,5       , 6        , 7       , 8       , 9         , 10     , 11     , 12     , 13     , 14         , 15   , 16  , 17  } adr + -1




uint8_t MEM_PREV[NUMBER_OF_MEM][LULU_PREVPIX*4] = {
    {0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // white
    {0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0},    // respi white
    {0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1},    // respi white speed
    {0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // str rnd lent
    {0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // str rnd 67
    {0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0},    // str all 67
    {0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0},    // str all 42
    {0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1},    // str all lent
    {0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 1},    // circule w
    {0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // circus w b
    {0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1},    // str w -> blue
    {0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // blue all
    {0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0},    // blue parcielle
    {0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // respi blue 
    {0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0},    // BLACK stm leave last mem
};
//  {r1,g1,b1,w1, r2,g2,b2,w2, r3,g3,w3,w3, r4,g4,b4,w4, r5,g5,b5,w5, r6,g6,b6,w6},

#endif