#include <K32_presets.h>

// 
// MEM ANIMATOR DATA 
//

class BankSK : public LBank { 
    public:
        BankSK() : LBank(16) {
//                   {0      , 1  , 2  , 3  , 4  ,5       , 6        , 7       , 8       , 9         , 10     , 11     , 12     , 13     , 14         , 15   } adr + -1
//                   {master , r  , g  , b  , w  ,pix mod , pix long , pix_pos , str_mod , str_speed , r_fond , g_fond , b_fond , w_fond , mirror_mod , zoom }
             add(  133, 133,   0,   0,   0,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,  255 ); // 00 Red
             add(  255, 255, 255, 255, 255,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,  255 ); // 01 White
             add(  255, 255, 255, 255, 255,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255 ); // 02 respi white **0** 38 > 217
             add(  255, 255, 255, 255, 255,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255 ); // 03 respi white speed **0** 38 > 217
             add(  255, 255, 255, 255, 255,       0,         0,      127,       45,        255,       0,       0,       0,       0,           0,  255 ); // 04 str rnd lent
             add(  255, 255, 255, 255, 255,       0,         0,      127,       45,        171,       0,       0,       0,       0,           0,  255 ); // 05 str rnd 67
             add(  255, 255, 255, 255, 255,       0,         0,      127,       15,        171,       0,       0,       0,       0,           0,  255 ); // 06 str all 67
                 mem->mod(new K32_mod_pulse)->at(1)->at(2)->at(3)->at(7)->at(8)->at(6)->at(5)->param(1, 10)->period(500);

             add(  255, 255, 255, 255, 255,       0,         0,      127,       15,        107,       0,       0,       0,       0,           0,  255 ); // 07 str all 42
             add(  255, 255, 255, 255, 255,       0,         0,      127,       15,        255,       0,       0,       0,       0,           0,  255 ); // 08 str all lent
             add(  255, 255, 255, 255, 255,       0,         0,      127,      215,          0,       0,       0,       0,       0,           0,  255 ); // 09 circule w **9** 229>238
                 mem->mod(new K32_mod_sinus)->at(0)->mini(100)->maxi(255)->period(2000);

             add(  255, 255, 255, 255, 255,      25,         9,      127,        0,          0,       0,       0,     255,       0,           0,  255 ); // 10 circus w b **7** 1>255
                 mem->mod(new K32_mod_sinus)->at(1)->at(2)->period(8500)->phase(0)->mini(0)->maxi(255);

             add(  255, 255, 255, 255, 255,       0,         0,      127,       15,        255,       0,       0,       0,       0,           0,  255 ); // 11 str w -> blue
                 mem->mod(new K32_mod_pulse)->at(2)->at(3)->param(1, 100)->period(7000);

             add(  255,   0,   0, 255,   0,       0,         0,      127,        0,          0,       0,       0,       0,       0,           0,  255 ); // 12 blue all
             add(  255,   0,   0, 255,   0,      55,       170,       56,        0,          0,       0,       0,       0,       0,          35,  255 ); // 13 blue parcielle
             add(  255,   0,   0, 255,   0,       0,         1,      127,        5,          0,       0,       0,       0,       0,           0,  255 ); // 14 respi blue **0**38 > 217
                 mem->mod(new K32_mod_sinus)->at(0)->period(8500)->mini(38)->maxi(217);
    
             add(    0,   0,   0,   0,   0,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,    0 ); // 15 BLACK stm leave lset mem
          nowifi(  255,   0,   0,   0,   0,       0,         0,        0,        0,          0,       0,       0,       0,       0,           0,  255 );            
        }
};


// 
// PREVIEW PIXEL MAP
//

class BankSK_PREV : public LBank { 
    public:
        BankSK_PREV() : LBank(6*4) {

                       //  {r1,g1,b1,w1, r2,g2,b2,w2, r3,g3,w3,w3, r4,g4,b4,w4, r5,g5,b5,w5, r6,g6,b6,w6},
                 add(1, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 00 red
                 add(0, 1, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 01 Green
                 add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 02 Blue
                 add(0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 03 White
                 add(1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 04 rvb **3 4 5**
                 add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 05 str rnd 67
                 add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0 );    // 06 str all 67
                 add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0 );    // 07 str all 42
                 add(0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1 );    // 08 str all lent
                 add(0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 1 );    // 09 circule w **9** 20>255
                 add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 10 circus w b
                 add(0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1 );    // 11 str w -> blue
                 add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 12 blue all
                 add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0 );    // 13 blue parcielle
                 add(0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 14 respi blue 
                 add(0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 15 BLACK stm leave last mem
        }
};