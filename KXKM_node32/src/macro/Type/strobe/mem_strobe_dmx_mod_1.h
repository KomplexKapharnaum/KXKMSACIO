#include <K32_presets.h>

// 
// MEM ANIMATOR DATA 
//

class BankStrobe : public LBank { 
    public:
        BankStrobe() : LBank(16) {
//                      {0      , 1  ,      2  , 3  , 4  , 5  , 6        ,  7       , 8      , 9         , 10     , 11    , 12    , 13    , 14      , 15             } adr + -1
//                      {master , str,str speed, r  , g  , b  , color mod, color eff,type eff, blast eff ,  ? eff , r eff , g eff , b eff , dim eff , background dim }
                add(  255,   2,        0, 255,   0,   0,         0,        0,        0,          0,       0,      0,      0,      0,        0,             255 ); // 00 Red
                add(  255,   2,        0,   0, 255,   0,         0,        0,        0,          0,       0,      0,      0,      0,        0,             255 ); // 01 Green
                add(  255,   2,        0,   0,   0, 255,         0,        0,        0,          0,       0,      0,      0,      0,        0,             255 ); // 02 Blue
                add(  255,   2,        0, 255, 255, 255,         0,        0,        0,          0,       0,      0,      0,      0,        0,             255 ); // 03 White
                add(  255,   2,        0, 255, 255, 255,         0,        0,        0,          0,       0,      0,      0,      0,        0,             255 ); // 04 rvb **3 4 5**
                add(  255,  29,       67, 255, 255, 255,         0,      127,       45,        171,       0,      0,      0,      0,        0,             255 ); // 05 str rnd 67
                add(  255, 230,       67, 255, 255, 255,         0,      127,       15,        171,       0,      0,      0,      0,        0,             255 ); // 06 str all 67
                add(  255, 230,       42, 255, 255, 255,         0,      127,       15,        107,       0,      0,      0,      0,        0,             255 ); // 07 str all 42
                add(  255, 230,      127, 255, 255, 255,         0,      127,       15,        255,       0,      0,      0,      0,        0,             255 ); // 08 str all lent
                add(  255,   2,        0, 255, 255, 255,         0,        0,      167,         14,      10,      0,      0,      0,      255,             255 ); // 09 circule w **9** 20>255
                add(  255,   2,        0, 255, 255, 255,         9,      127,       45,          0,       0,      0,      0,    255,      255,             255 ); // 10 circus w b **7** 1>255
                add(  255, 230,      180, 255, 255, 255,         0,        0,        0,          0,       0,      0,      0,    255,      255,             255 ); // 11 str w -> blue
                add(  255, 230,      180, 255, 255, 255,         0,        0,      122,         78,       0,      0,      0,    255,      255,             255 ); // 12 color form
                add(  255,   2,        0,   0, 127, 255,       170,       56,        0,          0,       0,      0,      0,      0,       35,             255 ); // 13 blue parcielle
                add(  255,   2 ,       0,   0,  80, 200,         1,      127,       85,          0,       0,      0,     10,    255,      255,             255 ); // 14 respi blue **0**38 > 217 
                add(    0,   0,        0,   0,   0,   0,         0,        0,        0,          0,       0,      0,      0,      0,        0,               0 ); // 15 BLACK stm leave lset mem
        }
    };


// 
// PREVIEW PIXEL MAP
//

class BankStrobe_PREV : public LBank { 
    public:
        BankStrobe_PREV() : LBank(6*4) {

                      //  {r1,g1,b1,w1, r2,g2,b2,w2, r3,g3,w3,w3, r4,g4,b4,w4, r5,g5,b5,w5, r6,g6,b6,w6},
                add(1, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 00 red
                add(0, 1, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 01 Green
                add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 02 Blue
                add(0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 03 White
                add(1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 04 rvb **3 4 5**
                add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 05 str rnd 67
                add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0 );    // 06 str all 67
                add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0 );    // 07 str all 42
                add(0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 1,  0, 0, 0, 1 );    // 08 str all lent
                add(0, 0, 0, 1,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 1 );    // 09 circule w **9** 20>255
                add(0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 10 circus w b
                add(0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 0, 1,  0, 0, 0, 1,  0, 0, 0, 1 );    // 11 str w -> blue
                add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 12 blue all
                add(0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0 );    // 13 blue parcielle
                add(0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 1, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 14 respi blue 
                add(0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0 );    // 15 BLACK stm leave last mem
        }
};